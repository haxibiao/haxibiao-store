type Order {
  id: Int!
  number: String
  account: String
  password: String
  products: [Product]
  refund: Boolean
  user: User
  store: Store
  technicianUser: User
  platformAccount: [PlatformAccount!]
  status: Int
  end_time: String
  appointment_time: String
  at_work_time: String
  created_at: DateTime!
  updated_at: DateTime!
}

extend type Query {
  order(id: Int! @eq): Order @find
  myOrders: [Order!] @paginate(defaultCount: 10, builder: "App\\Order@getMyOrders")
  orders(status: OrderStatus): [Order!] @paginate(defaultCount: 10, builder: "App\\Order@resolveOrders")
  """
  技师正在进行中的订单
  """
  workingOrder(user_id:Int!): Order @field(resolver: "App\\Order@resolveWorkingOrder")
}

enum OrderStatus {
  RESERVE @enum(value: "-1")
  UNPAY @enum(value: "0")
  ACCEPT @enum(value: "4")
  WORKING @enum(value: "5")
  OVER @enum(value: "6")
  PAID @enum(value: "1")
  REJECT @enum(value: "-2")
  RECEIVED @enum(value: "2")
  EXPIRE @enum(value: "3")
  CANCEL @enum(value: "-3")
}
